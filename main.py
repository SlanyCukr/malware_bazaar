from datetime import datetime
from typing import List

from api_client import ApiClient
from database_client import DatabaseClient

DATABASE_CREDENTIALS = {
    "host": "158.196.22.185",
    "user": "postgres",
    "password": "sX9iCneXiLs12Yk53MXrPboh",
    "port": 5433,
}

API_CREDENTIALS = {
    "api_key": "c92fee6c36b88c47b2296eb340c4c410",
}

MALWARE_SAMPLE_PATH = "/home/slanycukr/PycharmProjects/malware_bazaar/malware_samples/"


def filter_malware(malware: List[dict], last_timestamp: datetime) -> List[dict]:
    """
    Filter out malware that we already have in our database.
    :param malware: List of malware samples.
    :param last_timestamp: Timestamp of last malware in our database.
    :return: Filtered list of malware samples.
    """
    filtered_malware = []

    for sample in malware:
        timestamp = datetime.fromisoformat(sample["first_seen"])

        if timestamp > last_timestamp:
            filtered_malware.append(sample)

    return filtered_malware


if __name__ == "__main__":
    database_client = DatabaseClient(
        host=DATABASE_CREDENTIALS["host"],
        user=DATABASE_CREDENTIALS["user"],
        password=DATABASE_CREDENTIALS["password"],
        port=DATABASE_CREDENTIALS["port"],
    )

    api_client = ApiClient(api_key=API_CREDENTIALS["api_key"], malware_sample_path=MALWARE_SAMPLE_PATH)

    # select timestamp of last malware in our database
    last_timestamp: datetime = database_client.select_timestamp_of_last_malware_from_database()

    # select new malware from the API
    new_malware_response = api_client.query_latest_malware_samples().json()
    if new_malware_response["query_status"] == "no_results":
        print("No new malware samples found.")
        exit(0)

    new_malware: List[dict] = new_malware_response["data"]

    # filter out the ones already in our database
    filtered_malware: List[dict] = filter_malware(new_malware, last_timestamp)
    if len(filtered_malware) == 0:
        print("No new malware samples found.")
        exit(0)

    # extract only necessary values
    prepared_for_download: List[dict] = [
        {
            "sha256_hash": x["sha256_hash"],
            "time_bazaar": x["first_seen"],
        }
        for x in filtered_malware
    ]

    # download the malware samples
    api_client.download_malware_samples(prepared_for_download)

    # insert them into the database
    database_client.insert_malware_into_database(prepared_for_download)
