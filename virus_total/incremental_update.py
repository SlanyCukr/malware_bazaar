import vt
import json
import logging

from classes.database_client import DatabaseClient

logging.basicConfig(
    format='%(asctime)s.%(msecs)03d %(levelname)s - %(funcName)s: %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S',
)
logging.getLogger().setLevel(logging.CRITICAL)
LOG = logging.getLogger(__name__)
LOG.setLevel(logging.INFO)

API_KEY = "c86575809a3fd9ab1896bbe8f29874b6dde326065649bb0ef60dbaddd91aeccd"

DATABASE_CREDENTIALS = {
    "host": "158.196.22.185",
    "user": "postgres",
    "password": "sX9iCneXiLs12Yk53MXrPboh",
    "port": 5433,
}

MAX_REQUESTS_PER_MINUTE = 4

if __name__ == "__main__":
    database_client = DatabaseClient(
        host=DATABASE_CREDENTIALS["host"],
        user=DATABASE_CREDENTIALS["user"],
        password=DATABASE_CREDENTIALS["password"],
        port=DATABASE_CREDENTIALS["port"],
    )

    samples_without_analysis = database_client.select_last_n_samples_without_virus_total(MAX_REQUESTS_PER_MINUTE)

    with vt.Client(API_KEY) as client:
        results = []

        for sample in samples_without_analysis:
            try:
                LOG.info(f"Getting analysis for {sample.sha256_hash}.")
                result = client.get_object(
                    f"/files/{sample.sha256_hash}",
                )
            except Exception as e:
                LOG.error(f"Error while getting analysis for {sample.sha256_hash}.")
                raise e
            results.append((sample.id, json.dumps(result.__dict__, indent=4)))

        database_client.insert_virus_total_analysis_into_database(results)
