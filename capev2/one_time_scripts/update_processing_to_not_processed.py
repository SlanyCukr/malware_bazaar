import time
from types import SimpleNamespace
from typing import List

import requests
from tqdm import tqdm

from classes.database_client import DatabaseClient

DATABASE_CREDENTIALS = {
    "host": "158.196.22.185",
    "user": "postgres",
    "password": "sX9iCneXiLs12Yk53MXrPboh",
    "port": 5433,
}

API_URL = "http://158.196.22.185:8000/apiv2"


def update_processing_to_not_processed(db_client: DatabaseClient):
    query = "UPDATE malware_bazaar.malware SET malware_state = 'not_processed' WHERE malware_state = 'processing'"

    db_client.execute(query, commit=True)


def select_processing_tasks(db_client: DatabaseClient) -> List[SimpleNamespace]:
    query = """
    SELECT 
        m.id,
        m.cape_task_id 
    FROM 
        malware_bazaar.malware m
    WHERE 
        m.malware_state = 'processing'
    """

    results = db_client.query(query)

    return results


if __name__ == '__main__':
    database_client = DatabaseClient(
        host=DATABASE_CREDENTIALS["host"],
        user=DATABASE_CREDENTIALS["user"],
        password=DATABASE_CREDENTIALS["password"],
        port=DATABASE_CREDENTIALS["port"],
    )

    processing_tasks = select_processing_tasks(database_client)

    for task in tqdm(processing_tasks):
        response = requests.get(f"{API_URL}/tasks/delete/{task.cape_task_id}/pending")

        #if "failed to remove" not in response.text:
            #print(response.text)

        #print(response.text)

        time.sleep(0.1)

        test = ""

    # update_processing_to_not_processed()