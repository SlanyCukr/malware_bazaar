from capev2.capev2_submitter import CapeV2APISubmitter
from classes.database_client import DatabaseClient

DATABASE_CREDENTIALS = {
    "host": "158.196.22.185",
    "user": "postgres",
    "password": "sX9iCneXiLs12Yk53MXrPboh",
    "port": 5433,
}


def tasks_list_generator(cape_v2_submitter: CapeV2APISubmitter, limit: int = 100):
    offset = 0
    while True:
        response = cape_v2_submitter.get_tasks_list(limit, offset)

        response_dict = response.json()

        for task in response_dict["data"]:
            yield task

        offset += limit


if __name__ == "__main__":
    database_client = DatabaseClient(
            host=DATABASE_CREDENTIALS["host"],
            user=DATABASE_CREDENTIALS["user"],
            password=DATABASE_CREDENTIALS["password"],
            port=DATABASE_CREDENTIALS["port"],
        )
    cape_v2_api_submitter = CapeV2APISubmitter()

    for malware_sample in database_client.query("SELECT id, sha256_hash FROM malware_bazaar.malware WHERE cape_task_id IS NULL AND path_to_report IS NOT NULL"):
        response = cape_v2_api_submitter.get_basic_task_search(malware_sample.sha256_hash)
        response_dict = response.json()
        response_dict = response_dict["data"][0]

        query = "UPDATE malware_bazaar.malware SET cape_task_id = %s, time_processing_start = %s, malware_state = 'processed', time_processed = %s WHERE sha256_hash = %s"
        values = (response_dict["id"], response_dict["added_on"], response_dict["completed_on"], malware_sample.sha256_hash)
        database_client.execute(query, parameters=values)
        print(f"Updated {malware_sample.sha256_hash} with task_id {response_dict['id']}.")

    exit(0)

    for task in tasks_list_generator(cape_v2_api_submitter, 50):
        if len(task["errors"]) > 0:
            query = "UPDATE malware_bazaar.malware SET cape_task_id = %s, time_processing_start = %s, malware_state = 'error' WHERE sha256_hash = %s"
            values = (task["id"], task["added_on"], task["sample"]["sha256"])
            database_client.execute(query, parameters=values)
            print(f"Updated {task['sample']['sha256']} with task_id {task['id']} and error.")
            continue

        query = "UPDATE malware_bazaar.malware SET cape_task_id = %s, time_processing_start = %s, malware_state = 'processed', time_processed = %s WHERE sha256_hash = %s"
        values = (task["id"], task["added_on"], task["completed_on"], task["sample"]["sha256"])
        database_client.execute(query, parameters=values)
        print(f"Updated {task['sample']['sha256']} with task_id {task['id']}.")
