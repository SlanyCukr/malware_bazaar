import logging
import os
from dotenv import load_dotenv

from classes.database_client import DatabaseClient
from classes.graphml_processor import GraphMLProcessor

handler = logging.StreamHandler()
handler.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
handler.setFormatter(formatter)
LOG = logging.getLogger(__name__)
LOG.setLevel(logging.DEBUG)
LOG.addHandler(handler)

# Load the .env file
load_dotenv()


# Access the variables
db_host = os.getenv("DB_HOST")
db_user = os.getenv("DB_USER")
db_password = os.getenv("DB_PASSWORD")
db_port = os.getenv("DB_PORT")

if __name__ == "__main__":
    db_client = DatabaseClient(
        host=db_host,
        user=db_user,
        password=db_password,
        port=db_port,
    )

    processed_tags = ["tesla", "trojan", "stealc", "formbook", "heodo"]

    graphml_processor = GraphMLProcessor(db_client, processed_tags, LOG)
    graphml_processor.set_malware_report_paths_for_tags()
    graphml_processor.process_tag_reports()